name: Sync with Upstream Umami
permissions:
  contents: write
  pull-requests: write

on:
  schedule:
    - cron: '0 11 * * 5' # Runs weekly on Friday at 18:00 UTC+7 (11:00 UTC)
  workflow_dispatch:

jobs:
  check-upstream:
    runs-on: ubuntu-latest
    env:
      UPSTREAM_URL: https://github.com/umami-software/umami.git
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up git user
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Fetch upstream tags
        run: |
          git remote add upstream "$UPSTREAM_URL" || true
          git fetch upstream --tags

      - name: Get latest upstream tag
        id: get_tag
        run: |
          latest_tag=$(git ls-remote --tags upstream | awk -F/ '{print $3}' | grep -v '\^{}' | sed 's/^v//' | sort -V | tail -n1)
          echo "latest_tag=$latest_tag" >> $GITHUB_OUTPUT

      - name: Get last checked tag
        id: last_tag
        run: |
          if [ -f .github/upstream-last-tag.txt ]; then
            last_tag=$(cat .github/upstream-last-tag.txt)
          else
            last_tag=""
          fi
          echo "last_tag=$last_tag" >> $GITHUB_OUTPUT

      - name: Save latest tag for next run
        if: steps.get_tag.outputs.latest_tag != steps.last_tag.outputs.last_tag
        run: |
          echo "${{ steps.get_tag.outputs.latest_tag }}" > .github/upstream-last-tag.txt
          git add .github/upstream-last-tag.txt
          git commit -m "chore: update last checked upstream tag" || true
          git push origin HEAD:main || true

      - name: Check if new tag is available
        id: check_new_tag
        run: |
          if [ "${{ steps.get_tag.outputs.latest_tag }}" = "${{ steps.last_tag.outputs.last_tag }}" ]; then
            echo "No new tag. Exiting."
            exit 0
          fi

      - name: Fetch upstream tag
        if: steps.get_tag.outputs.latest_tag != steps.last_tag.outputs.last_tag
        run: |
          git fetch upstream tag ${{ steps.get_tag.outputs.latest_tag }}

      - name: Check diff and ignore local-only files
        id: diff_check
        run: |
          # Get list of files changed between upstream tag and main
          git diff --name-only upstream/${{ steps.get_tag.outputs.latest_tag }} origin/main > changed_files.txt
          # Get list of all files at upstream tag
          git fetch upstream ${{ steps.get_tag.outputs.latest_tag }}
          git checkout upstream/${{ steps.get_tag.outputs.latest_tag }} -- .
          find . -type f | sed 's|^./||' | sort > upstream_files.txt
          git checkout -
          # Filter out files that are not present in upstream
          files_to_include=()
          while read file; do
            if grep -Fxq "$file" upstream_files.txt; then
              files_to_include+=("$file")
            fi
          done < changed_files.txt
          if [ ${#files_to_include[@]} -eq 0 ]; then
            echo "No relevant changes to sync."
            exit 0
          fi
          echo "files_to_include=${files_to_include[*]}" >> $GITHUB_OUTPUT

      - name: Create PR with upstream changes
        if: steps.diff_check.outcome == 'success'
        uses: peter-evans/create-pull-request@v6
        with:
          title: "Sync with upstream Umami ${{ steps.get_tag.outputs.latest_tag }}"
          body: "Automated PR to sync changes from upstream tag ${{ steps.get_tag.outputs.latest_tag }}."
          commit-message: "chore: sync with upstream tag ${{ steps.get_tag.outputs.latest_tag }}"
          branch: "sync-upstream-${{ steps.get_tag.outputs.latest_tag }}"
          base: main
          add-paths: ${{ steps.diff_check.outputs.files_to_include }}
